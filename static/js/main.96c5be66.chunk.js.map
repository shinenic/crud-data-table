{"version":3,"sources":["actions/types.js","actions/index.js","components/FormInput.js","components/Form.js","components/DataRow.js","components/DataTable.js","components/App.js","reducers/index.js","index.js","Root.js"],"names":["HANDLE_INPUT_CHANGE","ADD_DATA","UPDATE_DATA","SET_INPUT_MESSAGE","DELETE_DATA","SELECT_ROW","SET_IS_FETCHING","handleInputChange","inputMode","textbox","value","type","payload","addData","data","updateData","deleteData","no","setInputMessage","bool","message","selectRow","rowData","setIsFetching","FormInput","handleChange","e","props","target","setInputState","check","defaultMessage","handleKeyDown","key","actionOnKeyDown","blur","className","this","editable","onChange","onKeyDown","disabled","name","isFormatCorrect","Component","connect","actions","checkValueUnique","str","length","map","includes","checkFormat","reg","test","Form","formatCheck","Object","keys","insertInput","reduce","acc","index","onClick","state","root","DataRow","dataExceptSelf","splice","indexOf","rowValue","updateDate","updateInput","style","display","alt","selectedData","DataTable","tableHead","sort","sortBy","method","sortData","setState","handleSortImg","id","sortState","newState","assign","toLowerCase","a","b","isFetching","App","formExpand","undefined","formToggle","toggleButton","document","querySelector","formDiv","classList","add","toggle","phone","email","initState","lastestNo","combineReducers","action","newInput","newData","updateDataIndex","updateDatas","selectedInput","newInputState","ReactDOM","render","children","store","createStore","Reducers","window","__REDUX_DEVTOOLS_EXTENSION__"],"mappings":"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","file":"static/js/main.96c5be66.chunk.js","sourcesContent":["export const HANDLE_INPUT_CHANGE = 'handle_input_change'\r\nexport const ADD_DATA = 'add_data'\r\nexport const UPDATE_DATA = 'update_data'\r\nexport const SET_INPUT_MESSAGE = 'set_input_message'\r\nexport const DELETE_DATA = 'delete_data'\r\nexport const SELECT_ROW = 'select_row'\r\nexport const SET_IS_FETCHING = 'set_is_fetching'\r\n","import {\r\n  HANDLE_INPUT_CHANGE,\r\n  ADD_DATA,\r\n  UPDATE_DATA,\r\n  SET_INPUT_MESSAGE,\r\n  DELETE_DATA,\r\n  SELECT_ROW,\r\n  SET_IS_FETCHING\r\n} from './types'\r\n\r\nexport function handleInputChange(inputMode, textbox, value) {\r\n  return {\r\n    type: HANDLE_INPUT_CHANGE,\r\n    payload: {\r\n      inputMode, textbox, value\r\n    }\r\n  }\r\n}\r\n\r\nexport function addData(data) {\r\n  return {\r\n    type: ADD_DATA,\r\n    payload: data\r\n  }\r\n}\r\n\r\nexport function updateData() {\r\n  return {\r\n    type: UPDATE_DATA\r\n  }\r\n}\r\n\r\nexport function deleteData(no) {\r\n  return {\r\n    type: DELETE_DATA,\r\n    payload: {\r\n      no\r\n    }\r\n  }\r\n}\r\n\r\nexport function setInputMessage(inputMode, textbox, bool, message) {\r\n  return {\r\n    type: SET_INPUT_MESSAGE,\r\n    payload: {\r\n      inputMode, textbox, bool, message\r\n    }\r\n  }\r\n}\r\n\r\nexport function selectRow(rowData) {\r\n  return {\r\n    type: SELECT_ROW,\r\n    payload: rowData\r\n  }\r\n}\r\n\r\nexport function setIsFetching(bool) {\r\n  return {\r\n    type: SET_IS_FETCHING,\r\n    payload: bool\r\n  }\r\n}","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport * as actions from '../actions/index'\r\n\r\nclass FormInput extends Component {\r\n  handleChange = e => {\r\n    this.props.handleChange(e.target.value)\r\n    this.props.setInputState(this.props.check(e.target.value), this.props.defaultMessage)\r\n  }\r\n  handleKeyDown = e => {\r\n    if (e.key === 'Enter') {\r\n      this.props.actionOnKeyDown()\r\n      e.target.blur()\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"form-input\">\r\n        <input\r\n          type=\"text\"\r\n          className={!!this.props.editable ? \"form-input__textbox\" : \"form-input__textbox form-input__textbox--disable\"}\r\n          value={this.props.value}\r\n          onChange={this.handleChange}\r\n          onKeyDown={this.handleKeyDown}\r\n          disabled={!this.props.editable} />\r\n        <div\r\n          className={this.props.value === ''\r\n            ? 'form-input__placehoder'\r\n            : 'form-input__placehoder form-input__placehoder--fixed'}>{this.props.name}</div>\r\n        {this.props.editable &&\r\n          <div className={this.props.isFormatCorrect ? \"form-input__message\" : \"form-input__message form-input__message--show\"}>{this.props.message}</div>}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(null, actions)(FormInput)","import React, { Component } from 'react'\r\nimport FormInput from './FormInput'\r\nimport { connect } from 'react-redux'\r\nimport * as actions from '../actions/index'\r\n\r\nexport const checkValueUnique = (str, data) => {\r\n  // 過濾掉長度為零\r\n  if (str.length === 0)\r\n    return true\r\n  // 尚未有資料的狀況\r\n  if (data.length === 0)\r\n    return true\r\n  // 過濾掉重複的 name\r\n  return !data.map(value => value.name).includes(str)\r\n}\r\n\r\nexport const checkFormat = (str, type) => {\r\n  // 過濾掉長度為零\r\n  if (str.length === 0)\r\n    return true\r\n  // 格式確認\r\n  let reg\r\n  switch (type) {\r\n    case 'PHONE':\r\n      reg = /^[0-9+-]*$/\r\n      break\r\n    case 'EMAIL':\r\n      reg = /^.+@[A-Za-z0-9_]+\\..+$/\r\n      break\r\n    default:\r\n      reg = /./\r\n  }\r\n  return reg.test(str)\r\n}\r\nexport const defaultMessage = ['name has been used', 'please check the format', 'please check the format']\r\n\r\nclass Form extends Component {\r\n  formatCheck = [\r\n    str => checkValueUnique(str, this.props.data),\r\n    str => checkFormat(str, 'PHONE'),\r\n    str => checkFormat(str, 'EMAIL')\r\n  ]\r\n  addData = () => {\r\n    const isFormatPass = Object.keys(this.props.insertInput).reduce((acc, key) => {\r\n      // 重新檢查 format\r\n      if (!this.props.insertInput[key].isFormatCorrect) {\r\n        return false\r\n      }\r\n      // 確認是否有空字串\r\n      if (this.props.insertInput[key].value.length === 0) {\r\n        // 設定錯誤提示\r\n        this.props.setInputMessage('insertInput', key, false, 'this field is required')\r\n        return false\r\n      }\r\n      return acc\r\n    }, true)\r\n    if (isFormatPass) {\r\n      const data = Object.keys(this.props.insertInput)\r\n        .reduce((acc, key) => {\r\n          acc[key] = this.props.insertInput[key].value\r\n          return acc\r\n        }, {})\r\n      this.props.addData(data) // add data\r\n      Object.keys(this.props.insertInput).map(key => this.props.handleInputChange('insertInput', key, '')) // clean input\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"form form-mobile\">\r\n        {Object.keys(this.props.insertInput).map((key, index) => {\r\n          return (<FormInput\r\n            key={index}\r\n            name={this.props.insertInput[key].name}\r\n            value={this.props.insertInput[key].value}\r\n            handleChange={str => this.props.handleInputChange('insertInput', key, str)}\r\n            setInputState={(bool, message) => this.props.setInputMessage('insertInput', key, bool, message)}\r\n            check={this.formatCheck[index]}\r\n            message={this.props.insertInput[key].message}\r\n            isFormatCorrect={this.props.insertInput[key].isFormatCorrect}\r\n            editable={true}\r\n            defaultMessage={defaultMessage[index]}\r\n            actionOnKeyDown={this.addData} />)\r\n        })}\r\n        <div>\r\n          <button onClick={this.addData}>Insert</button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    insertInput: state.root.insertInput,\r\n    data: state.root.data\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, actions)(Form)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport * as actions from '../actions/index'\r\nimport FormInput from './FormInput'\r\nimport { checkValueUnique, checkFormat, defaultMessage } from './Form'\r\n\r\nclass DataRow extends Component {\r\n  formatCheck = [\r\n    str => {\r\n      const dataExceptSelf = [...this.props.data]\r\n      dataExceptSelf.splice(dataExceptSelf.map(value => value.no).indexOf(this.props.rowValue.no), 1)\r\n      return checkValueUnique(str, dataExceptSelf)\r\n    },\r\n    str => checkFormat(str, 'PHONE'),\r\n    str => checkFormat(str, 'EMAIL')\r\n  ]\r\n  updateDate = () => {\r\n    const isFormatPass = Object.keys(this.props.updateInput).reduce((acc, key) => {\r\n      // 重新檢查 format\r\n      if (!this.props.updateInput[key].isFormatCorrect) {\r\n        return false\r\n      }\r\n      // 確認是否有空字串\r\n      if (this.props.updateInput[key].value.length === 0) {\r\n        // 設定錯誤提示\r\n        this.props.setInputMessage('updateInput', key, false, 'this field is required')\r\n        return false\r\n      }\r\n      return acc\r\n    }, true)\r\n    if (isFormatPass) {\r\n      this.props.updateData() // update data\r\n      Object.keys(this.props.updateInput).map(key => this.props.handleInputChange('updateInput', key, '')) // clean input\r\n      return true\r\n    }\r\n    return false\r\n  }\r\n  render() {\r\n    return (\r\n      <div className={this.props.editable ? 'row row--updating' : 'row'}>\r\n        <div>\r\n          <div>{this.props.rowValue.no}</div>\r\n        </div>\r\n        {Object.keys(this.props.updateInput).map((key, index) => {\r\n          // 順序為 ['name','phone','email']\r\n          return (<FormInput\r\n            key={index}\r\n            value={this.props.editable ? this.props.updateInput[key].value : this.props.rowValue[key]}\r\n            handleChange={str => this.props.handleInputChange('updateInput', key, str)}\r\n            setInputState={(bool, message) => this.props.setInputMessage('updateInput', key, bool, message)}\r\n            check={this.formatCheck[index]}\r\n            message={this.props.updateInput[key].message}\r\n            isFormatCorrect={this.props.updateInput[key].isFormatCorrect}\r\n            defaultMessage={defaultMessage[index]}\r\n            editable={this.props.editable}\r\n            actionOnKeyDown={() => {\r\n              this.updateDate() && this.props.selectRow({ no: -1 })\r\n            }} />)\r\n        })}\r\n        <div>\r\n          <img\r\n            onClick={() => { this.updateDate() && this.props.selectRow({ no: -1 }) }}\r\n            style={!this.props.editable ? { display: 'none' } : null}\r\n            className=\"row__check-icon\" alt=\"check-icon\" />\r\n          <img\r\n            // 禁止同時編輯\r\n            onClick={() => this.props.selectedData === -1 && this.props.selectRow(this.props.rowValue)}\r\n            className={this.props.selectedData !== -1 ? \"row__edit-icon row--disable\" : \"row__edit-icon\"}\r\n            style={this.props.editable ? { display: 'none' } : null}\r\n            alt=\"edit-icon\" />\r\n\r\n        </div>\r\n        <div>\r\n          <img\r\n            className=\"row__recover-icon\"\r\n            alt=\"recover-icon\"\r\n            style={!this.props.editable ? { display: 'none' } : null}\r\n            onClick={() => this.props.selectRow({ no: -1 })} />\r\n          <img\r\n            className=\"row__delete-icon\"\r\n            alt=\"delete-icon\"\r\n            style={this.props.editable ? { display: 'none' } : null}\r\n            onClick={() => !this.props.editable && this.props.deleteData(this.props.rowValue.no)} />\r\n\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    updateInput: state.root.updateInput,\r\n    data: state.root.data,\r\n    selectedData: state.root.selectedData\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, actions)(DataRow)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport * as actions from '../actions/index'\r\nimport DataRow from './DataRow'\r\n\r\nclass DataTable extends Component {\r\n  state = {\r\n    tableHead: [\r\n      { name: 'No', sort: 'unset' },\r\n      { name: 'Name', sort: 'unset' },\r\n      { name: 'Phone', sort: 'unset' },\r\n      { name: 'Email', sort: 'unset' }],\r\n    sort: {\r\n      sortBy: 'no',\r\n      method: 'decrease'\r\n    },\r\n    // increase, decrease\r\n  }\r\n  sortData = (sortBy, method) => {\r\n    this.setState({\r\n      sort: {\r\n        sortBy: sortBy,\r\n        method: method\r\n      }\r\n    })\r\n  }\r\n  handleSortImg = (id) => {\r\n    let sortState = this.state.tableHead.map(value => value.sort)\r\n    let newState = Object.assign({}, this.state)\r\n    // 還沒有被排序過\r\n    if (sortState.reduce((acc, value) => value === 'unset' ? acc + 1 : acc, 0) === 4) {\r\n      newState.tableHead[id].sort = 'decrease'\r\n    } else if (sortState[id] !== 'unset') {// 重複被選中\r\n      newState.tableHead[id].sort = newState.tableHead[id].sort === 'decrease' ? 'increase' : 'unset'\r\n    } else { // 其他選項有被改過\r\n      newState.tableHead.map(value => value.sort = 'unset')\r\n      newState.tableHead[id].sort = 'decrease'\r\n    }\r\n    this.setState({ tableHead: newState.tableHead })\r\n    this.sortData(this.state.tableHead[id].name.toLowerCase(), this.state.tableHead[id].sort)\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"data-table\">\r\n        <div className=\"row\">\r\n          {this.state.tableHead.map((value, index) => {\r\n            return (\r\n              <div key={index} onClick={() => this.handleSortImg(index)} className=\"row__sortable-column\">\r\n                {value.name}\r\n                <img\r\n                  className=\"row__sort-icon row__sort-icon--unset\"\r\n                  alt=\"sort-icon1\"\r\n                  style={value.sort !== 'unset' ? { display: 'none' } : {}} />\r\n                <img\r\n                  className=\"row__sort-icon row__sort-icon--decrease\"\r\n                  alt=\"sort-icon2\"\r\n                  style={value.sort !== 'decrease' ? { display: 'none' } : {}} />\r\n                <img\r\n                  className=\"row__sort-icon row__sort-icon--increase\"\r\n                  alt=\"sort-icon3\"\r\n                  style={value.sort !== 'increase' ? { display: 'none' } : {}} />\r\n              </div>\r\n            )\r\n          })}\r\n          {/* 保留給 edit & delete */}\r\n          <div></div>\r\n          <div></div>\r\n        </div>\r\n        <div className=\"block\" />\r\n        {/* 排序功能 */}\r\n        {this.props.data.sort((a, b) => {\r\n          if (this.state.sort.method === 'unset') {\r\n            return a.no - b.no;\r\n          } else if (this.state.sort.sortBy === 'no') {\r\n            return this.state.sort.method === 'decrease' ? a.no - b.no : b.no - a.no\r\n          } else {\r\n            if (this.state.sort.method === 'decrease')\r\n              return a[this.state.sort.sortBy] > b[this.state.sort.sortBy] ? 1 : -1\r\n            else\r\n              return b[this.state.sort.sortBy] > a[this.state.sort.sortBy] ? 1 : -1\r\n          }\r\n        }).map((value, index) => {\r\n          return (\r\n            <DataRow\r\n              key={index}\r\n              rowValue={value}\r\n              editable={value.no === this.props.selectedData}\r\n            />\r\n          )\r\n        })}\r\n        {this.props.data.length === 0 && !this.props.isFetching &&\r\n          <div className=\"data-table-hint\">\r\n            <div>No Data Found.</div>\r\n          </div>}\r\n      </div>\r\n    )\r\n  }\r\n}\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    data: state.root.data,\r\n    selectedData: state.root.selectedData,\r\n    isFetching: state.root.isFetching\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, actions)(DataTable)","import React, { Component } from 'react'\r\nimport Form from './Form'\r\nimport DataTable from './DataTable'\r\nimport { connect } from 'react-redux'\r\n// import axios from 'axios'\r\nimport * as actions from '../actions/index'\r\n\r\nclass App extends Component {\r\n  state = {\r\n    formExpand: undefined\r\n  }\r\n  async componentDidMount() {\r\n    // load static demo data\r\n    let demoData = [\r\n      {\r\n        name: 'Tim',\r\n        phone: '0981-495-798',\r\n        email: 'fs234@gamil.com'\r\n      },\r\n      {\r\n        name: 'Zed',\r\n        phone: '0000-159-159',\r\n        email: 'zzz@gamil.com'\r\n      },\r\n      {\r\n        name: 'Cat',\r\n        phone: '0956-785-498',\r\n        email: 'cat@gamil.com'\r\n      },\r\n      {\r\n        name: 'Annie',\r\n        phone: '0198-458-498',\r\n        email: 'ani@hotmail.con.tw'\r\n      },\r\n      {\r\n        name: 'Gali5566',\r\n        phone: '0198-498-452',\r\n        email: 'g5566@gamil.com'\r\n      }]\r\n    demoData.map(data => this.props.addData(data))\r\n\r\n    // load random user data\r\n    // this.props.setIsFetching(true)\r\n    // for (let i = 0; i < 5; i++) {\r\n    //   await axios.get('https://randomuser.me/api/')\r\n    //     .then(res => {\r\n    //       this.props.addData({\r\n    //         name: res.data.results[0].name.first,\r\n    //         phone: res.data.results[0].cell.replace(/[^0-9+-]/g, ''),\r\n    //         email: res.data.results[0].email\r\n    //       })\r\n    //     })\r\n    // }\r\n    // this.props.setIsFetching(false)\r\n  }\r\n  formToggle = () => {\r\n    const toggleButton = document.querySelector('.insert-toggle__button')\r\n    const formDiv = document.querySelector('.form-mobile')\r\n    if (this.state.formExpand === undefined) {\r\n      toggleButton.classList.add('insert-toggle__button--expand')\r\n      this.setState({ formExpand: true })\r\n    }\r\n    else {\r\n      toggleButton.classList.toggle('insert-toggle__button--expand')\r\n      toggleButton.classList.toggle('insert-toggle__button--close')\r\n      this.setState({ formExpand: !this.state.formExpand })\r\n    }\r\n    formDiv.classList.toggle('form-mobile--expand')\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"app\">\r\n        <div className=\"header\">\r\n          <div className=\"title\">\r\n            <span>Data Table</span>\r\n          </div>\r\n          <div className=\"insert-toggle\">\r\n            <div className=\"insert-toggle__button\"\r\n              onClick={this.formToggle}>+</div>\r\n          </div>\r\n        </div>\r\n        <Form />\r\n        <div className=\"data-table\">\r\n          <DataTable />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(null, actions)(App)","import { combineReducers } from 'redux'\r\nimport {\r\n  HANDLE_INPUT_CHANGE,\r\n  ADD_DATA,\r\n  UPDATE_DATA,\r\n  SET_INPUT_MESSAGE,\r\n  DELETE_DATA,\r\n  SELECT_ROW,\r\n  SET_IS_FETCHING\r\n} from '../actions/types'\r\n\r\nconst initState = {\r\n  insertInput: {\r\n    name: {\r\n      name: 'Name',\r\n      value: '',\r\n      message: 'name has been used',\r\n      isFormatCorrect: true\r\n    },\r\n    phone: {\r\n      name: 'Phone',\r\n      value: '',\r\n      message: 'please check the format',\r\n      isFormatCorrect: true\r\n    },\r\n    email: {\r\n      name: 'Email',\r\n      value: '',\r\n      message: 'please check the format',\r\n      isFormatCorrect: true\r\n    }\r\n  },\r\n  updateInput: {\r\n    name: {\r\n      name: 'Name',\r\n      value: '',\r\n      message: 'name has been used',\r\n      isFormatCorrect: true\r\n    },\r\n    phone: {\r\n      name: 'Phone',\r\n      value: '',\r\n      message: 'please check the format',\r\n      isFormatCorrect: true\r\n    },\r\n    email: {\r\n      name: 'Email',\r\n      value: '',\r\n      message: 'please check the format',\r\n      isFormatCorrect: true\r\n    }\r\n  },\r\n  selectedData: -1,\r\n  lastestNo: 0,\r\n  data: [],\r\n  isFetching: false\r\n}\r\n\r\nconst datatableReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n\r\n    case HANDLE_INPUT_CHANGE:\r\n      let newInput = Object.assign({}, state[action.payload.inputMode])\r\n      newInput[action.payload.textbox].value = action.payload.value\r\n      if (action.payload.inputMode === 'updateInput')\r\n        return Object.assign({}, state, { updateInput: newInput })\r\n      else if (action.payload.inputMode === 'insertInput')\r\n        return Object.assign({}, state, { insertInput: newInput })\r\n      else return Object.assign({}, state)\r\n    case ADD_DATA:\r\n      const newData = Object.keys(action.payload).reduce((acc, key) => {\r\n        acc[key] = action.payload[key]\r\n        return acc\r\n      }, {})\r\n      newData.no = state.lastestNo + 1\r\n      return Object.assign({}, state, {\r\n        data: [...state.data, newData],\r\n        lastestNo: state.lastestNo + 1\r\n      })\r\n    case UPDATE_DATA:\r\n      const updateData = Object.keys(state.updateInput).reduce((acc, key) => {\r\n        acc[key] = state.updateInput[key].value\r\n        return acc\r\n      }, {})\r\n      updateData.no = state.selectedData\r\n      const updateDataIndex = state.data.map(data => data.no).indexOf(state.selectedData)\r\n      const updateDatas = [...state.data]\r\n      updateDatas.splice(updateDataIndex, 1, updateData)\r\n      return Object.assign({}, state, {\r\n        data: [...updateDatas]\r\n      })\r\n    case DELETE_DATA:\r\n      // 取得欲刪除 data 之 index\r\n      const index = state.data.map(data => data.no).indexOf(action.payload.no)\r\n      state.data.splice(index, 1)\r\n      return Object.assign({}, state, {\r\n        data: [...state.data]\r\n      })\r\n    case SELECT_ROW:\r\n      // 設定為不選擇任何 row 更新\r\n      if (action.payload.no === -1)\r\n        return Object.assign({}, state, {\r\n          selectedData: -1\r\n        })\r\n      // 設定被選中 row 的值到 update input value 之中\r\n      let selectedInput = Object.assign({}, state.updateInput)\r\n      Object.keys(selectedInput).map(key => {\r\n        selectedInput[key].value = action.payload[key]\r\n        selectedInput[key].isFormatCorrect = true\r\n        return undefined\r\n      })\r\n      return Object.assign({}, state, {\r\n        selectedData: action.payload.no,\r\n        updateInput: selectedInput\r\n      })\r\n    case SET_INPUT_MESSAGE:\r\n      let newInputState = Object.assign({}, state[action.payload.inputMode])\r\n      // 若沒有 payload.message 參數傳入\r\n      newInputState[action.payload.textbox].message\r\n        = action.payload.message || newInputState[action.payload.textbox].message\r\n      newInputState[action.payload.textbox].isFormatCorrect = action.payload.bool\r\n      if (action.payload.inputMode === 'updateInput')\r\n        return Object.assign({}, state, { updateInput: newInputState })\r\n      else if (action.payload.inputMode === 'insertInput')\r\n        return Object.assign({}, state, { insertInput: newInputState })\r\n      else\r\n        return Object.assign({}, state)\r\n    case SET_IS_FETCHING:\r\n      return Object.assign({}, state, {\r\n        isFetching: action.payload\r\n      })\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default combineReducers({\r\n  root: datatableReducer\r\n})","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './components/App'\r\nimport Root from './Root'\r\nimport './styles/Index.scss'\r\n\r\nReactDOM.render(\r\n  <Root>\r\n    <App />\r\n  </Root>\r\n  , document.querySelector('#root')\r\n)\r\n","import React from 'react'\r\nimport { createStore } from 'redux'\r\nimport { Provider } from 'react-redux'\r\nimport Reducers from './reducers/index'\r\n\r\n\r\nexport default ({ children, initState = {} }) => {\r\n  // const store = createStore(Reducers, initState)\r\n  const store = createStore(Reducers, initState, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\r\n  return (\r\n    <Provider store={store}>\r\n      {children}\r\n    </Provider>\r\n  )\r\n}"],"sourceRoot":""}