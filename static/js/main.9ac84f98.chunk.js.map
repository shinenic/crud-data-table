{"version":3,"sources":["actions/types.js","actions/index.js","components/FormInput.js","components/Form.js","components/DataRow.js","components/DataTable.js","components/App.js","reducers/index.js","index.js","Root.js"],"names":["HANDLE_INPUT_CHANGE","ADD_DATA","UPDATE_DATA","SET_INPUT_MESSAGE","DELETE_DATA","SELECT_ROW","handleInputChange","inputMode","textbox","value","type","payload","addData","data","updateData","deleteData","no","setInputMessage","bool","message","selectRow","rowData","FormInput","handleChange","e","props","target","setInputState","check","defaultMessage","handleKeyDown","key","actionOnKeyDown","blur","className","this","editable","onChange","onKeyDown","disabled","name","isFormatCorrect","Component","connect","actions","checkValueUnique","str","length","map","includes","checkFormat","reg","test","Form","formatCheck","Object","keys","insertInput","reduce","acc","index","onClick","state","root","DataRow","dataExceptSelf","splice","indexOf","rowValue","updateDate","updateInput","alt","selectedData","style","filter","DataTable","tableHead","sort","sortBy","method","sortData","setState","handleSortImg","id","sortState","newState","assign","toLowerCase","a","b","App","formExpand","undefined","formToggle","toggleButton","document","querySelector","formDiv","classList","add","toggle","phone","email","initState","lastestNo","combineReducers","action","newInput","newData","updateDataIndex","updateDatas","selectedInput","newInputState","ReactDOM","render","children","store","createStore","Reducers","window","__REDUX_DEVTOOLS_EXTENSION__"],"mappings":"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","file":"static/js/main.9ac84f98.chunk.js","sourcesContent":["export const HANDLE_INPUT_CHANGE = 'handle_input_change'\r\nexport const ADD_DATA = 'add_data'\r\nexport const UPDATE_DATA = 'update_data'\r\nexport const SET_INPUT_MESSAGE = 'set_input_message'\r\nexport const DELETE_DATA = 'delete_data'\r\nexport const SELECT_ROW = 'select_row'\r\n","import {\r\n  HANDLE_INPUT_CHANGE,\r\n  ADD_DATA,\r\n  UPDATE_DATA,\r\n  SET_INPUT_MESSAGE,\r\n  DELETE_DATA,\r\n  SELECT_ROW\r\n} from './types'\r\n\r\nexport function handleInputChange(inputMode, textbox, value) {\r\n  return {\r\n    type: HANDLE_INPUT_CHANGE,\r\n    payload: {\r\n      inputMode, textbox, value\r\n    }\r\n  }\r\n}\r\n\r\nexport function addData(data) {\r\n  return {\r\n    type: ADD_DATA,\r\n    payload:data\r\n  }\r\n}\r\n\r\nexport function updateData() {\r\n  return {\r\n    type: UPDATE_DATA\r\n  }\r\n}\r\n\r\nexport function deleteData(no) {\r\n  return {\r\n    type: DELETE_DATA,\r\n    payload: {\r\n      no\r\n    }\r\n  }\r\n}\r\n\r\nexport function setInputMessage(inputMode, textbox, bool, message) {\r\n  return {\r\n    type: SET_INPUT_MESSAGE,\r\n    payload: {\r\n      inputMode, textbox, bool, message\r\n    }\r\n  }\r\n}\r\n\r\nexport function selectRow(rowData) {\r\n  return {\r\n    type: SELECT_ROW,\r\n    payload: rowData\r\n  }\r\n}","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport * as actions from '../actions/index'\r\n\r\nclass FormInput extends Component {\r\n  handleChange = e => {\r\n    this.props.handleChange(e.target.value)\r\n    this.props.setInputState(this.props.check(e.target.value), this.props.defaultMessage)\r\n  }\r\n  handleKeyDown = e => {\r\n    if (e.key === 'Enter') {\r\n      this.props.actionOnKeyDown()\r\n      e.target.blur()\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"form-input\">\r\n        <input\r\n          type=\"text\"\r\n          className={!!this.props.editable ? \"form-input__textbox\" : \"form-input__textbox form-input__textbox--disable\"}\r\n          value={this.props.value}\r\n          onChange={this.handleChange}\r\n          onKeyDown={this.handleKeyDown}\r\n          disabled={!this.props.editable} />\r\n        <div\r\n          className={this.props.value === ''\r\n            ? 'form-input__placehoder'\r\n            : 'form-input__placehoder form-input__placehoder--fixed'}>{this.props.name}</div>\r\n        {this.props.editable &&\r\n          <div className={this.props.isFormatCorrect ? \"form-input__message\" : \"form-input__message form-input__message--show\"}>{this.props.message}</div>}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(null, actions)(FormInput)","import React, { Component } from 'react'\r\nimport FormInput from './FormInput'\r\nimport { connect } from 'react-redux'\r\nimport * as actions from '../actions/index'\r\n\r\nexport const checkValueUnique = (str, data) => {\r\n  // 過濾掉長度為零\r\n  if (str.length === 0)\r\n    return true\r\n  // 尚未有資料的狀況\r\n  if (data.length === 0)\r\n    return true\r\n  // 過濾掉重複的 name\r\n  return !data.map(value => value.name).includes(str)\r\n}\r\n\r\nexport const checkFormat = (str, type) => {\r\n  // 過濾掉長度為零\r\n  if (str.length === 0)\r\n    return true\r\n  // 格式確認\r\n  let reg\r\n  switch (type) {\r\n    case 'PHONE':\r\n      reg = /^[0-9+-]*$/\r\n      break\r\n    case 'EMAIL':\r\n      reg = /^.+@[A-Za-z0-9_]+\\..+$/\r\n      break\r\n    default:\r\n      reg = /./\r\n  }\r\n  return reg.test(str)\r\n}\r\nexport const defaultMessage = ['name has been used', 'please check the format', 'please check the format']\r\n\r\nclass Form extends Component {\r\n  formatCheck = [\r\n    str => checkValueUnique(str, this.props.data),\r\n    str => checkFormat(str, 'PHONE'),\r\n    str => checkFormat(str, 'EMAIL')\r\n  ]\r\n  addData = () => {\r\n    const isFormatPass = Object.keys(this.props.insertInput).reduce((acc, key) => {\r\n      // 重新檢查 format\r\n      if (!this.props.insertInput[key].isFormatCorrect) {\r\n        return false\r\n      }\r\n      // 確認是否有空字串\r\n      if (this.props.insertInput[key].value.length === 0) {\r\n        // 設定錯誤提示\r\n        this.props.setInputMessage('insertInput', key, false, 'this field is required')\r\n        return false\r\n      }\r\n      return acc\r\n    }, true)\r\n    if (isFormatPass) {\r\n      const data = Object.keys(this.props.insertInput)\r\n        .reduce((acc, key) => {\r\n          acc[key] = this.props.insertInput[key].value\r\n          return acc\r\n        }, {})\r\n      this.props.addData(data) // add data\r\n      Object.keys(this.props.insertInput).map(key => this.props.handleInputChange('insertInput', key, '')) // clean input\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"form form-mobile\">\r\n        {Object.keys(this.props.insertInput).map((key, index) => {\r\n          return (<FormInput\r\n            key={index}\r\n            name={this.props.insertInput[key].name}\r\n            value={this.props.insertInput[key].value}\r\n            handleChange={str => this.props.handleInputChange('insertInput', key, str)}\r\n            setInputState={(bool, message) => this.props.setInputMessage('insertInput', key, bool, message)}\r\n            check={this.formatCheck[index]}\r\n            message={this.props.insertInput[key].message}\r\n            isFormatCorrect={this.props.insertInput[key].isFormatCorrect}\r\n            editable={true}\r\n            defaultMessage={defaultMessage[index]}\r\n            actionOnKeyDown={this.addData} />)\r\n        })}\r\n        <div>\r\n          <button onClick={this.addData}>Insert</button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    insertInput: state.root.insertInput,\r\n    data: state.root.data\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, actions)(Form)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport * as actions from '../actions/index'\r\nimport FormInput from './FormInput'\r\nimport { checkValueUnique, checkFormat, defaultMessage } from './Form'\r\n\r\nclass DataRow extends Component {\r\n  formatCheck = [\r\n    str => {\r\n      const dataExceptSelf = [...this.props.data]\r\n      dataExceptSelf.splice(dataExceptSelf.map(value => value.no).indexOf(this.props.rowValue.no), 1)\r\n      return checkValueUnique(str, dataExceptSelf)\r\n    },\r\n    str => checkFormat(str, 'PHONE'),\r\n    str => checkFormat(str, 'EMAIL')\r\n  ]\r\n  updateDate = () => {\r\n    const isFormatPass = Object.keys(this.props.updateInput).reduce((acc, key) => {\r\n      // 重新檢查 format\r\n      if (!this.props.updateInput[key].isFormatCorrect) {\r\n        return false\r\n      }\r\n      // 確認是否有空字串\r\n      if (this.props.updateInput[key].value.length === 0) {\r\n        // 設定錯誤提示\r\n        this.props.setInputMessage('updateInput', key, false, 'this field is required')\r\n        return false\r\n      }\r\n      return acc\r\n    }, true)\r\n    if (isFormatPass) {\r\n      this.props.updateData() // update data\r\n      Object.keys(this.props.updateInput).map(key => this.props.handleInputChange('updateInput', key, '')) // clean input\r\n      return true\r\n    }\r\n    return false\r\n  }\r\n  render() {\r\n    return (\r\n      <div className={this.props.editable ? 'row row--updating' : 'row'}>\r\n        <div>\r\n          <div>{this.props.rowValue.no}</div>\r\n        </div>\r\n        {Object.keys(this.props.updateInput).map((key, index) => {\r\n          // 順序為 ['name','phone','email']\r\n          return (<FormInput\r\n            key={index}\r\n            value={this.props.editable ? this.props.updateInput[key].value : this.props.rowValue[key]}\r\n            handleChange={str => this.props.handleInputChange('updateInput', key, str)}\r\n            setInputState={(bool, message) => this.props.setInputMessage('updateInput', key, bool, message)}\r\n            check={this.formatCheck[index]}\r\n            message={this.props.updateInput[key].message}\r\n            isFormatCorrect={this.props.updateInput[key].isFormatCorrect}\r\n            defaultMessage={defaultMessage[index]}\r\n            editable={this.props.editable}\r\n            actionOnKeyDown={() => {\r\n              this.updateDate() && this.props.selectRow({ no: -1 })\r\n            }} />)\r\n        })}\r\n        <div>\r\n          {this.props.editable\r\n            ? <img\r\n              onClick={() => { this.updateDate() && this.props.selectRow({ no: -1 }) }}\r\n              className=\"row__check-icon\" alt=\"check-icon\" />\r\n            : <img\r\n              onClick={() => this.props.selectedData === -1 && this.props.selectRow(this.props.rowValue)}\r\n              style={this.props.selectedData !== -1 ? { filter: 'invert(0.8)' }:{}} // 禁止同時編輯ㄋ\r\n              className=\"row__edit-icon\" alt=\"edit-icon\" />\r\n          }\r\n        </div>\r\n        <div>\r\n          {this.props.editable\r\n            ? <img\r\n              className=\"row__recover-icon\"\r\n              alt=\"recover-icon\"\r\n              onClick={() => this.props.selectRow({ no: -1 })} />\r\n            : <img\r\n              className=\"row__delete-icon\"\r\n              alt=\"delete-icon\"\r\n              onClick={() => !this.props.editable && this.props.deleteData(this.props.rowValue.no)} />\r\n          }\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    updateInput: state.root.updateInput,\r\n    data: state.root.data,\r\n    selectedData: state.root.selectedData\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, actions)(DataRow)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport * as actions from '../actions/index'\r\nimport DataRow from './DataRow'\r\n\r\nclass DataTable extends Component {\r\n  state = {\r\n    tableHead: [\r\n      { name: 'No', sort: 'unset' },\r\n      { name: 'Name', sort: 'unset' },\r\n      { name: 'Phone', sort: 'unset' },\r\n      { name: 'Email', sort: 'unset' }],\r\n    sort: {\r\n      sortBy: 'no',\r\n      method: 'decrease'\r\n    },\r\n    // increase, decrease\r\n  }\r\n  sortData = (sortBy, method) => {\r\n    this.setState({\r\n      sort: {\r\n        sortBy: sortBy,\r\n        method: method\r\n      }\r\n    })\r\n  }\r\n  handleSortImg = (id) => {\r\n    let sortState = this.state.tableHead.map(value => value.sort)\r\n    let newState = Object.assign({}, this.state)\r\n    // 還沒有被排序過\r\n    if (sortState.reduce((acc, value) => value === 'unset' ? acc + 1 : acc, 0) === 4) {\r\n      newState.tableHead[id].sort = 'decrease'\r\n    } else if (sortState[id] !== 'unset') {// 重複被選中\r\n      newState.tableHead[id].sort = newState.tableHead[id].sort === 'decrease' ? 'increase' : 'unset'\r\n    } else { // 其他選項有被改過\r\n      newState.tableHead.map(value => value.sort = 'unset')\r\n      newState.tableHead[id].sort = 'decrease'\r\n    }\r\n    this.setState({ tableHead: newState.tableHead })\r\n    this.sortData(this.state.tableHead[id].name.toLowerCase(), this.state.tableHead[id].sort)\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"data-table\">\r\n        <div className=\"row\">\r\n          {this.state.tableHead.map((value, index) => {\r\n            return (\r\n              <div key={index} onClick={() => this.handleSortImg(index)} className=\"row__sortable-column\">\r\n                {value.name}\r\n                {\r\n                  value.sort === 'unset'\r\n                    ? <img className=\"row__sort-icon row__sort-icon--unset\" alt=\"sort-icon1\" />\r\n                    : value.sort === 'decrease'\r\n                      ? <img className=\"row__sort-icon row__sort-icon--decrease\" alt=\"sort-icon2\" />\r\n                      : <img className=\"row__sort-icon row__sort-icon--increase\" alt=\"sort-icon3\" />\r\n                }\r\n              </div>\r\n            )\r\n          })}\r\n          {/* 保留給 edit & delete */}\r\n          <div></div>\r\n          <div></div>\r\n        </div>\r\n        <div className=\"block\" />\r\n        {/* 排序功能 */}\r\n        {this.props.data.sort((a, b) => {\r\n          if (this.state.sort.method === 'unset') {\r\n            return a.no - b.no;\r\n          } else if (this.state.sort.sortBy === 'no') {\r\n            return this.state.sort.method === 'decrease' ? a.no - b.no : b.no - a.no\r\n          } else {\r\n            if (this.state.sort.method === 'decrease')\r\n              return a[this.state.sort.sortBy] > b[this.state.sort.sortBy] ? 1 : -1\r\n            else\r\n              return b[this.state.sort.sortBy] > a[this.state.sort.sortBy] ? 1 : -1\r\n          }\r\n        }).map((value, index) => {\r\n          return (\r\n            <DataRow\r\n              key={index}\r\n              rowValue={value}\r\n              editable={value.no === this.props.selectedData}\r\n            />\r\n          )\r\n        })}\r\n        {this.props.data.length === 0 &&\r\n          <div className=\"no-data\">\r\n            <div>No Data Found.</div>\r\n          </div>}\r\n      </div>\r\n    )\r\n  }\r\n}\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    data: state.root.data,\r\n    selectedData: state.root.selectedData,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, actions)(DataTable)","import React, { Component } from 'react'\r\nimport Form from './Form'\r\nimport DataTable from './DataTable'\r\nimport { connect } from 'react-redux'\r\nimport * as actions from '../actions/index'\r\n\r\nclass App extends Component {\r\n  state = {\r\n    formExpand: undefined\r\n  }\r\n  componentDidMount() {\r\n    const demoData = [\r\n      {\r\n        name: 'Tim',\r\n        phone: '0981-495-798',\r\n        email: 'fs234@gamil.com'\r\n      },\r\n      {\r\n        name: 'Zed',\r\n        phone: '0000-159-159',\r\n        email: 'zzz@gamil.com'\r\n      },\r\n      {\r\n        name: 'Cat',\r\n        phone: '0956-785-498',\r\n        email: 'cat@gamil.com'\r\n      },\r\n      {\r\n        name: 'Annie',\r\n        phone: '0198-458-498',\r\n        email: 'ani@hotmail.con.tw'\r\n      },\r\n      {\r\n        name: 'Gali5566',\r\n        phone: '0198-498-452',\r\n        email: 'g5566@gamil.com'\r\n      }]\r\n    demoData.map(data => this.props.addData(data))\r\n  }\r\n  formToggle = () => {\r\n    const toggleButton = document.querySelector('.insert-toggle__button')\r\n    const formDiv = document.querySelector('.form-mobile')\r\n    if (this.state.formExpand === undefined) {\r\n      toggleButton.classList.add('insert-toggle__button--expand')\r\n      this.setState({ formExpand: true })\r\n    }\r\n    else {\r\n      toggleButton.classList.toggle('insert-toggle__button--expand')\r\n      toggleButton.classList.toggle('insert-toggle__button--close')\r\n      this.setState({ formExpand: !this.state.formExpand })\r\n    }\r\n    formDiv.classList.toggle('form-mobile--expand')\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"app\">\r\n        <div className=\"header\">\r\n          <div className=\"title\">\r\n            <span>Data Table</span>\r\n          </div>\r\n          <div className=\"insert-toggle\">\r\n            <div className=\"insert-toggle__button\"\r\n              onClick={this.formToggle}>+</div>\r\n          </div>\r\n        </div>\r\n        <Form />\r\n        <div className=\"data-table\">\r\n          <DataTable />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(null, actions)(App)","import { combineReducers } from 'redux'\r\nimport {\r\n  HANDLE_INPUT_CHANGE,\r\n  ADD_DATA,\r\n  UPDATE_DATA,\r\n  SET_INPUT_MESSAGE,\r\n  DELETE_DATA,\r\n  SELECT_ROW\r\n} from '../actions/types'\r\n\r\nconst initState = {\r\n  insertInput: {\r\n    name: {\r\n      name: 'Name',\r\n      value: 'Jack',\r\n      message: 'name has been used',\r\n      isFormatCorrect: true\r\n    },\r\n    phone: {\r\n      name: 'Phone',\r\n      value: '0900-465-725',\r\n      message: 'please check the format',\r\n      isFormatCorrect: true\r\n    },\r\n    email: {\r\n      name: 'Email',\r\n      value: 'fs@yahoo.com',\r\n      message: 'please check the format',\r\n      isFormatCorrect: true\r\n    }\r\n  },\r\n  updateInput: {\r\n    name: {\r\n      name: 'Name',\r\n      value: '',\r\n      message: 'name has been used',\r\n      isFormatCorrect: true\r\n    },\r\n    phone: {\r\n      name: 'Phone',\r\n      value: '',\r\n      message: 'please check the format',\r\n      isFormatCorrect: true\r\n    },\r\n    email: {\r\n      name: 'Email',\r\n      value: '',\r\n      message: 'please check the format',\r\n      isFormatCorrect: true\r\n    }\r\n  },\r\n  selectedData: -1,\r\n  lastestNo: 0,\r\n  data: []\r\n}\r\n\r\nconst datatableReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n\r\n    case HANDLE_INPUT_CHANGE:\r\n      let newInput = Object.assign({}, state[action.payload.inputMode])\r\n      newInput[action.payload.textbox].value = action.payload.value\r\n      if (action.payload.inputMode === 'updateInput')\r\n        return Object.assign({}, state, { updateInput: newInput })\r\n      else if (action.payload.inputMode === 'insertInput')\r\n        return Object.assign({}, state, { insertInput: newInput })\r\n      else return Object.assign({}, state)\r\n    case ADD_DATA:\r\n      const newData = Object.keys(action.payload).reduce((acc, key) => {\r\n        acc[key] = action.payload[key]\r\n        return acc\r\n      }, {})\r\n      newData.no = state.lastestNo + 1\r\n      return Object.assign({}, state, {\r\n        data: [...state.data, newData],\r\n        lastestNo: state.lastestNo + 1\r\n      })\r\n    case UPDATE_DATA:\r\n      const updateData = Object.keys(state.updateInput).reduce((acc, key) => {\r\n        acc[key] = state.updateInput[key].value\r\n        return acc\r\n      }, {})\r\n      updateData.no = state.selectedData\r\n      const updateDataIndex = state.data.map(data => data.no).indexOf(state.selectedData)\r\n      const updateDatas = [...state.data]\r\n      updateDatas.splice(updateDataIndex, 1, updateData)\r\n      return Object.assign({}, state, {\r\n        data: [...updateDatas]\r\n      })\r\n    case DELETE_DATA:\r\n      // 取得欲刪除 data 之 index\r\n      const index = state.data.map(data => data.no).indexOf(action.payload.no)\r\n      state.data.splice(index, 1)\r\n      return Object.assign({}, state, {\r\n        data: [...state.data]\r\n      })\r\n    case SELECT_ROW:\r\n      // 設定為不選擇任何 row 更新\r\n      if (action.payload.no === -1)\r\n        return Object.assign({}, state, {\r\n          selectedData: -1\r\n        })\r\n      // 設定被選中 row 的值到 update input value 之中\r\n      let selectedInput = Object.assign({}, state.updateInput)\r\n      Object.keys(selectedInput).map(key => {\r\n        selectedInput[key].value = action.payload[key]\r\n        selectedInput[key].isFormatCorrect = true\r\n        return undefined\r\n      })\r\n      return Object.assign({}, state, {\r\n        selectedData: action.payload.no,\r\n        updateInput: selectedInput\r\n      })\r\n    case SET_INPUT_MESSAGE:\r\n      let newInputState = Object.assign({}, state[action.payload.inputMode])\r\n      // 若沒有 payload.message 參數傳入\r\n      newInputState[action.payload.textbox].message\r\n        = action.payload.message || newInputState[action.payload.textbox].message\r\n      newInputState[action.payload.textbox].isFormatCorrect = action.payload.bool\r\n      if (action.payload.inputMode === 'updateInput')\r\n        return Object.assign({}, state, { updateInput: newInputState })\r\n      else if (action.payload.inputMode === 'insertInput')\r\n        return Object.assign({}, state, { insertInput: newInputState })\r\n      else\r\n        return Object.assign({}, state)\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default combineReducers({\r\n  root: datatableReducer\r\n})","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './components/App'\r\nimport Root from './Root'\r\nimport './styles/Index.scss'\r\n\r\nReactDOM.render(\r\n  <Root>\r\n    <App />\r\n  </Root>\r\n  , document.querySelector('#root')\r\n)\r\n","import React from 'react'\r\nimport { createStore } from 'redux'\r\nimport { Provider } from 'react-redux'\r\nimport Reducers from './reducers/index'\r\n\r\n\r\nexport default ({ children, initState = {} }) => {\r\n  // const store = createStore(Reducers, initState)\r\n  const store = createStore(Reducers, initState, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\r\n  return (\r\n    <Provider store={store}>\r\n      {children}\r\n    </Provider>\r\n  )\r\n}"],"sourceRoot":""}